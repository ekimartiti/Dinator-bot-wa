import { EmotionBehavior } from './emotion-behavior.entity';
import { EmotionStrength } from './emotion-strength.entity';
export declare enum InworldPacketType {
    UNKNOWN = 0,
    TEXT = 1,
    AUDIO = 2,
    CUSTOM = 3,
    EMOTION = 4,
    CONTROL = 5
}
export declare enum InworlControlType {
    UNKNOWN = 0,
    INTERACTION_END = 3
}
export interface InworldPacketProps {
    audio?: AudioEvent;
    control?: ControlEvent;
    custom?: CustomEvent;
    emotions?: EmotionEvent;
    packetId: PacketId;
    routing: Routing;
    text?: TextEvent;
    date: string;
    type: InworldPacketType;
}
export interface PacketId {
    packetId: string;
    utteranceId: string;
    interactionId: string;
}
export interface EmotionEvent {
    joy: number;
    fear: number;
    trust: number;
    surprise: number;
    behavior: EmotionBehavior;
    strength: EmotionStrength;
}
export interface Routing {
    source: Actor;
    target: Actor;
}
export interface Actor {
    name: string;
    isPlayer: boolean;
    isCharacter: boolean;
}
export interface TextEvent {
    text: string;
    final: boolean;
}
export interface CustomEvent {
    name: string;
}
export interface AudioEvent {
    chuck: string;
}
export interface ControlEvent {
    type: InworlControlType;
}
export declare class InworldPacket {
    private type;
    date: string;
    packetId: PacketId;
    routing: Routing;
    text: TextEvent;
    audio: AudioEvent;
    control: ControlEvent;
    custom: CustomEvent;
    emotions: EmotionEvent;
    constructor(props: InworldPacketProps);
    isText(): boolean;
    isAudio(): boolean;
    isControl(): boolean;
    isCustom(): boolean;
    isEmotion(): boolean;
    isInteractionEnd(): boolean;
}
